name: Create Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'

    - name: Publish
      run: |
        VERSION=${{ github.ref }}
        VERSION=${VERSION#refs/tags/}
        VERSION=${VERSION#v}
        dotnet publish src/ForeverOnline/ForeverOnline.csproj --configuration Release --output ./publish/ForeverOnline /p:PublishProfile=SingleFile /p:Version=$VERSION
        dotnet publish src/ForeverOnline.Launcher/ForeverOnline.Launcher.csproj --configuration Release --output ./publish/ForeverOnline.Launcher /p:PublishProfile=SingleFile /p:Version=$VERSION

    - name: Prepare files
      run: |
        mkdir -p publish/ForeverOnline/app
        find publish/ForeverOnline -maxdepth 1 -type f -exec mv {} publish/ForeverOnline/app \;
        mv publish/ForeverOnline.Launcher/* publish/ForeverOnline
        find publish/ForeverOnline -name "*.pdb" -type f -delete
  
    - name: Zip app files
      run: |
        zip -r ForeverOnlineApp.zip publish/ForeverOnline/app
  
    - name: Rename launcher exe
      run: |
        mv publish/ForeverOnline/ForeverOnline.Launcher.exe ForeverOnlineLauncher.exe
  
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
  
    - name: Upload App Release Asset
      id: upload-app-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ForeverOnlineApp.zip
        asset_name: ForeverOnlineApp.zip
        asset_content_type: application/zip
  
    - name: Upload Launcher Release Asset
      id: upload-launcher-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ForeverOnlineLauncher.exe
        asset_name: ForeverOnlineLauncher.exe
        asset_content_type: application/vnd.microsoft.portable-executable
